name: Build and Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: front-agent-test
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:latest ./ir-func-agent-front
          docker push $ECR_REGISTRY/$IMAGE_NAME:latest

      # - name: Install dependencies
      #   run: npm ci
      #   working-directory: ./ir-func-agent-front

      # - name: Build React app
      #   run: npm run build
      #   working-directory: ./ir-func-agent-front

      # - name: Deploy to S3
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --delete
      #   env:
      #     AWS_S3_BUCKET: ir-func-agent-bucket
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ap-northeast-1
      #     SOURCE_DIR: ./ir-func-agent-front/dist

      # - name: Configure AWS credentials for Lambda
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-1

      # - name: Invoke Lambda (post-deploy notification)
      #   run: |
      #     aws lambda invoke \
      #       --function-name lambda-study-invalidate-lambda \
      #       --payload '{}' \
      #       response.json
      #     cat response.json

